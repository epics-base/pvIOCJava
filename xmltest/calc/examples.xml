<?xml version="1.0" ?>
<database>

<substitute fromTo = "checkRecord=constantExpression,checkType=double,checkValue=18.0" />
<record recordName = "${checkRecord}" >
    <scalar name = "value" scalarType = "${checkType}" />
    <structure name = "alarm" extends = "alarm" />
    <structure name = "timeStamp" extends = "timeStamp" />
    <structure name = "input" extends = "calculation" >
       <structure name = "calculator">
         <scalar name = "expression">
             ((Math.abs(-(1.0 + 2.0*3.0 + 4*2 + 3.0))))
         </scalar>
       </structure>
    </structure>
    <structure name = "scan" extends = "scan">
        <scalar name = "processAfterStart">true</scalar>
    </structure>
    <include href = "checkLink.xml" />
</record>
<include href = "checkReal.xml" />

<substitute fromTo = "checkRecord=constantExpression1,checkType=double,checkValue=18.0" />
<record recordName = "${checkRecord}" >
    <scalar name = "value" scalarType = "${checkType}" />
    <structure name = "alarm" extends = "alarm" />
    <structure name = "timeStamp" extends = "timeStamp" />
    <structure name = "input" extends = "calculation" >
       <structure name = "calculator">
         <scalar name = "expression">
             Math.abs(-(((1.0 + (2.0*3.0)) + (4*2)) + 3.0))
         </scalar>
       </structure>
    </structure>
    <structure name = "scan" extends = "scan">
        <scalar name = "processAfterStart">true</scalar>
    </structure>
    <include href = "checkLink.xml" />
</record>
<include href = "checkReal.xml" />

<substitute fromTo = "checkRecord=cosPI,checkType=double,checkValue=-1" />
<record recordName = "${checkRecord}" >
    <scalar name = "value" scalarType = "${checkType}" />
    <structure name = "alarm" extends = "alarm" />
    <structure name = "timeStamp" extends = "timeStamp" />
    <structure name = "input" extends = "calculation" >
       <structure name = "calculator">
         <scalar name = "expression">
             Math.cos(Math.PI)
         </scalar>
       </structure>
    </structure>
    <structure name = "scan" extends = "scan">
        <scalar name = "processAfterStart">true</scalar>
    </structure>
    <include href = "checkLink.xml" />
</record>
<include href = "checkReal.xml" />

<substitute fromTo = "checkRecord=calcExample,checkType=double,checkValue=18.0" />
<record recordName = "${checkRecord}" >
    <scalar name = "value" scalarType = "${checkType}" />
    <structure name = "alarm" extends = "alarm" />
    <structure name = "timeStamp" extends = "timeStamp" />
    <structure name = "input" extends = "calculation" >
       <structure name = "calcArgs">
           <auxInfo name = "supportFactory" scalarType = "string">org.epics.pvioc.calcArgsFactory</auxInfo>
          <structure name = "a">
            <scalar name = "value" scalarType = "double" >1.0</scalar>
          </structure>
          <structure name = "b">
            <scalar name = "value" scalarType = "double" >2.0</scalar>
          </structure>
          <structure name = "c">
            <scalar name = "value" scalarType = "double" >3.0</scalar>
          </structure>
          <structure name = "d">
            <scalar name = "value" scalarType = "double" >4.0</scalar>
          </structure>
          <structure name = "e">
            <scalar name = "value" scalarType = "double" >2.0</scalar>
          </structure>
       </structure>
       <structure name = "calculator">
         <scalar name = "expression">
             Math.abs(-(a + b*c + d*e + 3.0))
         </scalar>
       </structure>
    </structure>
     <structure name = "scan" extends = "scan">
        <scalar name = "processAfterStart">true</scalar>
    </structure>
    <include href = "checkLink.xml" />
</record>
<include href = "checkReal.xml" />

<record recordName = "calcSimpleCounter" >
    <scalar name = "value" scalarType = "int" />
    <structure name = "alarm" extends = "alarm" />
    <structure name = "timeStamp" extends = "timeStamp" />
    <structure name = "input" extends = "calculation" >
       <structure name = "calculator">
         <scalar name = "expression">
             value+1&lt;=10?value+1:0
         </scalar>
       </structure>
    </structure>
     <structure name = "scan" extends = "scan">
        <scalar name = "processAfterStart">true</scalar>
    </structure>
</record>

<record recordName = "calcCounter">
    <scalar name = "value"  scalarType = "double" />
    <structure name = "alarm" extends = "alarm" />
    <structure name = "timeStamp" extends = "timeStamp" />
    <structure name = "input" extends = "calculation" >
       <structure name = "calcArgs">
           <auxInfo name = "supportFactory" scalarType = "string">org.epics.pvioc.calcArgsFactory</auxInfo>
          <structure name = "min">
            <scalar name = "value" scalarType = "double" >0.0</scalar>
          </structure>
          <structure name = "max">
            <scalar name = "value" scalarType = "double" >10.0</scalar>
          </structure>
          <structure name = "inc">
            <scalar name = "value" scalarType = "double" >0.5</scalar>
          </structure>
       </structure>
       <structure name = "calculator">
         <scalar name = "expression">
             ((value+inc)&lt;=max)?(value+inc):min
         </scalar>
       </structure>
    </structure>
     <structure name = "scan" extends = "scan">
        <scalar name = "processAfterStart">true</scalar>
    </structure>
</record>
<!--
-->

</database>
